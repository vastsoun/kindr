#=========================================================================================
# Copyright (c) 2013, Christian Gehring, Hannes Sommer, Paul Furgale, Remo Diethelm
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Autonomous Systems Lab, ETH Zurich nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL Christian Gehring, Hannes Sommer, Paul Furgale,
# Remo Diethelm BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#=========================================================================================
#
# Finds the Kindr C++ header-only library for integration into CMake projects.
#
# This will define the following imported targets:
#    kindr::kindr
#
# In addition, following variables will also be defined:
#    kindr_FOUND
#    kindr_VERSION
#    kindr_INCLUDE_DIRS
#    kindr_LIBRARIES
#=========================================================================================
include(FindPackageHandleStandardArgs)

# Unset found flag to ensure correct package configuration
unset(kindr_FOUND)

#==
# Dependencies
#==

# TODO: Add find_package() on Eigen3 if Eigen3::Eigen CMake target

#==
# Pacakge contents
#==

if(NOT TARGET kindr::kindr)
  include(${CMAKE_CURRENT_LIST_DIR}/kindr-targets.cmake)
endif()

get_target_property(kindr_INCLUDE_DIRS kindr::kindr INTERFACE_INCLUDE_DIRECTORIES)
get_target_property(kindr_LIBRARIES kindr::kindr INTERFACE_LINK_LIBRARIES)

#==
# Pacakge configuration check
#==

find_package_handle_standard_args(kindr
  REQUIRED_VARS
    kindr_VERSION
    kindr_INCLUDE_DIRS
    kindr_LIBRARIES
)

if(kindr_FOUND)
  message(STATUS "Kindr:")
  message(STATUS "  Version: ${kindr_VERSION}")
  message(STATUS "  Includes: ${kindr_INCLUDE_DIRS}")
  message(STATUS "  Libraries: ${kindr_LIBRARIES}")
endif()

mark_as_advanced(kindr_FOUND kindr_INCLUDE_DIRS kindr_LIBRARIES)

# This causes catkin_simple to link against these libraries
set(kindr_FOUND_CATKIN_PROJECT true)

# For backwards compatibility
get_filename_component(kindr_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

# EOF
